/*
 * generated by Xtext 2.14.0
 */
package ac.soton.xmark.ide.contentassist.antlr;

import ac.soton.xmark.ide.contentassist.antlr.internal.InternalXMarkingParser;
import ac.soton.xmark.services.XMarkingGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class XMarkingParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(XMarkingGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, XMarkingGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getExerciseAccess().getAlternatives_1(), "rule__Exercise__Alternatives_1");
			builder.put(grammarAccess.getXPartAccess().getAlternatives(), "rule__XPart__Alternatives");
			builder.put(grammarAccess.getXPartGradeAccess().getAlternatives(), "rule__XPartGrade__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getXSectionAccess().getAlternatives_0(), "rule__XSection__Alternatives_0");
			builder.put(grammarAccess.getXQuestionAccess().getAlternatives_1(), "rule__XQuestion__Alternatives_1");
			builder.put(grammarAccess.getExerciseAccess().getGroup(), "rule__Exercise__Group__0");
			builder.put(grammarAccess.getExerciseAccess().getGroup_1_1(), "rule__Exercise__Group_1_1__0");
			builder.put(grammarAccess.getExerciseAccess().getGroup_6(), "rule__Exercise__Group_6__0");
			builder.put(grammarAccess.getExerciseAccess().getGroup_7(), "rule__Exercise__Group_7__0");
			builder.put(grammarAccess.getExerciseAccess().getGroup_8(), "rule__Exercise__Group_8__0");
			builder.put(grammarAccess.getExerciseAccess().getGroup_9(), "rule__Exercise__Group_9__0");
			builder.put(grammarAccess.getXCommentAccess().getGroup(), "rule__XComment__Group__0");
			builder.put(grammarAccess.getXSectionAccess().getGroup(), "rule__XSection__Group__0");
			builder.put(grammarAccess.getXSectionAccess().getGroup_3(), "rule__XSection__Group_3__0");
			builder.put(grammarAccess.getXQuestionAccess().getGroup(), "rule__XQuestion__Group__0");
			builder.put(grammarAccess.getXQuestionAccess().getGroup_4(), "rule__XQuestion__Group_4__0");
			builder.put(grammarAccess.getXStudentAccess().getGroup(), "rule__XStudent__Group__0");
			builder.put(grammarAccess.getXGroupAccess().getGroup(), "rule__XGroup__Group__0");
			builder.put(grammarAccess.getXMarkAccess().getGroup(), "rule__XMark__Group__0");
			builder.put(grammarAccess.getSectionGradeAccess().getGroup(), "rule__SectionGrade__Group__0");
			builder.put(grammarAccess.getSectionGradeAccess().getGroup_1(), "rule__SectionGrade__Group_1__0");
			builder.put(grammarAccess.getQuestionGradeAccess().getGroup(), "rule__QuestionGrade__Group__0");
			builder.put(grammarAccess.getQuestionGradeAccess().getGroup_2(), "rule__QuestionGrade__Group_2__0");
			builder.put(grammarAccess.getQuestionGradeAccess().getGroup_2_2(), "rule__QuestionGrade__Group_2_2__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getExerciseAccess().getNameAssignment_2(), "rule__Exercise__NameAssignment_2");
			builder.put(grammarAccess.getExerciseAccess().getModuleAssignment_4(), "rule__Exercise__ModuleAssignment_4");
			builder.put(grammarAccess.getExerciseAccess().getPartsAssignment_6_0(), "rule__Exercise__PartsAssignment_6_0");
			builder.put(grammarAccess.getExerciseAccess().getPartsAssignment_6_1(), "rule__Exercise__PartsAssignment_6_1");
			builder.put(grammarAccess.getExerciseAccess().getStudentsAssignment_7_1(), "rule__Exercise__StudentsAssignment_7_1");
			builder.put(grammarAccess.getExerciseAccess().getStudentsAssignment_7_2(), "rule__Exercise__StudentsAssignment_7_2");
			builder.put(grammarAccess.getExerciseAccess().getGroupsAssignment_8_1(), "rule__Exercise__GroupsAssignment_8_1");
			builder.put(grammarAccess.getExerciseAccess().getGroupsAssignment_8_2(), "rule__Exercise__GroupsAssignment_8_2");
			builder.put(grammarAccess.getExerciseAccess().getMarksAssignment_9_1(), "rule__Exercise__MarksAssignment_9_1");
			builder.put(grammarAccess.getExerciseAccess().getMarksAssignment_9_2(), "rule__Exercise__MarksAssignment_9_2");
			builder.put(grammarAccess.getXCommentAccess().getNameAssignment_0(), "rule__XComment__NameAssignment_0");
			builder.put(grammarAccess.getXCommentAccess().getCommentAssignment_2(), "rule__XComment__CommentAssignment_2");
			builder.put(grammarAccess.getXSectionAccess().getNameAssignment_1(), "rule__XSection__NameAssignment_1");
			builder.put(grammarAccess.getXSectionAccess().getCommentsAssignment_3_0(), "rule__XSection__CommentsAssignment_3_0");
			builder.put(grammarAccess.getXSectionAccess().getCommentsAssignment_3_1(), "rule__XSection__CommentsAssignment_3_1");
			builder.put(grammarAccess.getXSectionAccess().getSubsectionsAssignment_4(), "rule__XSection__SubsectionsAssignment_4");
			builder.put(grammarAccess.getXSectionAccess().getSubsectionsAssignment_5(), "rule__XSection__SubsectionsAssignment_5");
			builder.put(grammarAccess.getXQuestionAccess().getNameAssignment_2(), "rule__XQuestion__NameAssignment_2");
			builder.put(grammarAccess.getXQuestionAccess().getGradeAssignment_3(), "rule__XQuestion__GradeAssignment_3");
			builder.put(grammarAccess.getXQuestionAccess().getCommentsAssignment_4_0(), "rule__XQuestion__CommentsAssignment_4_0");
			builder.put(grammarAccess.getXQuestionAccess().getCommentsAssignment_4_1(), "rule__XQuestion__CommentsAssignment_4_1");
			builder.put(grammarAccess.getXStudentAccess().getNameAssignment_0(), "rule__XStudent__NameAssignment_0");
			builder.put(grammarAccess.getXStudentAccess().getFirstnameAssignment_2(), "rule__XStudent__FirstnameAssignment_2");
			builder.put(grammarAccess.getXStudentAccess().getLastnameAssignment_3(), "rule__XStudent__LastnameAssignment_3");
			builder.put(grammarAccess.getXGroupAccess().getNameAssignment_0(), "rule__XGroup__NameAssignment_0");
			builder.put(grammarAccess.getXGroupAccess().getStudentsAssignment_2(), "rule__XGroup__StudentsAssignment_2");
			builder.put(grammarAccess.getXGroupAccess().getStudentsAssignment_3(), "rule__XGroup__StudentsAssignment_3");
			builder.put(grammarAccess.getXMarkAccess().getRecipientAssignment_1(), "rule__XMark__RecipientAssignment_1");
			builder.put(grammarAccess.getXMarkAccess().getGradeAssignment_4(), "rule__XMark__GradeAssignment_4");
			builder.put(grammarAccess.getXMarkAccess().getGradeAssignment_5(), "rule__XMark__GradeAssignment_5");
			builder.put(grammarAccess.getSectionGradeAccess().getPartAssignment_0(), "rule__SectionGrade__PartAssignment_0");
			builder.put(grammarAccess.getSectionGradeAccess().getCommentsAssignment_1_1(), "rule__SectionGrade__CommentsAssignment_1_1");
			builder.put(grammarAccess.getSectionGradeAccess().getCommentsAssignment_1_2(), "rule__SectionGrade__CommentsAssignment_1_2");
			builder.put(grammarAccess.getSectionGradeAccess().getSubgradesAssignment_3(), "rule__SectionGrade__SubgradesAssignment_3");
			builder.put(grammarAccess.getSectionGradeAccess().getSubgradesAssignment_4(), "rule__SectionGrade__SubgradesAssignment_4");
			builder.put(grammarAccess.getQuestionGradeAccess().getPartAssignment_0(), "rule__QuestionGrade__PartAssignment_0");
			builder.put(grammarAccess.getQuestionGradeAccess().getMarkAssignment_1(), "rule__QuestionGrade__MarkAssignment_1");
			builder.put(grammarAccess.getQuestionGradeAccess().getCommentsAssignment_2_1(), "rule__QuestionGrade__CommentsAssignment_2_1");
			builder.put(grammarAccess.getQuestionGradeAccess().getCommentsAssignment_2_2_1(), "rule__QuestionGrade__CommentsAssignment_2_2_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private XMarkingGrammarAccess grammarAccess;

	@Override
	protected InternalXMarkingParser createParser() {
		InternalXMarkingParser result = new InternalXMarkingParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public XMarkingGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(XMarkingGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
