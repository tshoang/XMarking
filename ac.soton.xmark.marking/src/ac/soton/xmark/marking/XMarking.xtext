// automatically generated by Xtext
grammar ac.soton.xmark.marking.XMarking with org.eclipse.xtext.common.Terminals

import "http://xmarking.soton.ac/models/marking/2018" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Exercise returns Exercise:
	{Exercise}
	('exercise' | 'problem' 'class' | 'tutorial' | 'assignment' | 'coursework') name=EString '('module=EString')'
	(parts+=XPart (parts+=XPart)*)?
	('students' students += XStudent (students += XStudent)*)
	('groups' groups += XGroup (groups += XGroup)*)?
	('marks' marks+=XMark (marks +=XMark)*)?
	'end';

XPart returns Part:
	XSection | XQuestion;

XPartGrade returns PartGrade:
	SectionGrade | QuestionGrade;

EString returns ecore::EString:
	STRING | ID;

XComment returns Comment:
	name=ID ':' comment=STRING
;

XSection returns Section:
	('section' | 'part' | 'subsection') name=EString
	'{'
		(comments+=XComment (comments+=XComment)*)?
		subsections+=XPart (subsections+=XPart)* 
	'}';

XQuestion returns Question:
	{Question}
	('question' | 'task') name=EString grade=INT
	(comments+=XComment (comments+=XComment)*)?
;

XStudent returns Student:
	name=ID ':' firstname=EString lastname=EString
;

XGroup returns Group:
	name=ID
	'{'
		students+=[Student] (students+=[Student])* 
	'}';

XMark returns Mark:
	{Mark}
	recipient = [Recipient]
	'begin' grade += XPartGrade (grade += XPartGrade)* 'end'
;

SectionGrade returns SectionGrade:
	part=[Section|EString] ( '(' comments+=[Comment|EString] (comments+=[Comment|EString])* ')' )?
	'{'
		subgrades+=XPartGrade (subgrades+=XPartGrade)* 
	'}';

QuestionGrade returns QuestionGrade:
	part=[Question|EString] mark = EInt ( '(' comments+=[Comment|EString] ( "," comments+=[Comment|EString])* ')' )?
;

EInt returns ecore::EInt:
	'-'? INT;